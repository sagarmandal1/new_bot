"""
‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶∏‡¶ø‡¶° ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü - Sample Data Seeder
Database Seed Script - Sample Data Seeder
"""

from config.database import db, Quote
from datetime import datetime

def seed_quotes():
    """Add sample motivational quotes to database"""
    
    quotes_data = [
        {
            'text_bn': '‡¶∏‡¶´‡¶≤‡¶§‡¶æ ‡¶Ü‡¶∏‡ßá ‡¶ß‡ßà‡¶∞‡ßç‡¶Ø ‡¶è‡¶¨‡¶Ç ‡¶ï‡¶†‡¶ø‡¶® ‡¶™‡¶∞‡¶ø‡¶∂‡ßç‡¶∞‡¶Æ‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá‡•§',
            'text_en': 'Success comes through patience and hard work.',
            'author_bn': '‡¶ú‡¶®‡¶™‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶™‡ßç‡¶∞‡¶¨‡¶æ‡¶¶',
            'author_en': 'Popular Proverb',
            'category': 'success'
        },
        {
            'text_bn': '‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶¶‡¶ø‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡ßÅ‡¶Ø‡ßã‡¶ó‡•§',
            'text_en': 'Every new day is a new opportunity.',
            'author_bn': '‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ',
            'author_en': 'Unknown',
            'category': 'motivation'
        },
        {
            'text_bn': '‡¶∏‡ßç‡¶¨‡¶™‡ßç‡¶® ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®, ‡¶™‡¶∞‡¶ø‡¶ï‡¶≤‡ßç‡¶™‡¶®‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®, ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßÅ‡¶®‡•§',
            'text_en': 'Dream, plan, work.',
            'author_bn': '‡¶™‡ßç‡¶∞‡ßá‡¶∞‡¶£‡¶æ‡¶¶‡¶æ‡¶Ø‡¶º‡¶ï',
            'author_en': 'Inspirational',
            'category': 'planning'
        },
        {
            'text_bn': '‡¶Ö‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶á ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶∂‡¶ï‡ßç‡¶§‡¶ø‡¶∂‡¶æ‡¶≤‡ßÄ ‡¶ï‡¶∞‡ßá ‡¶§‡ßã‡¶≤‡ßá‡•§',
            'text_en': 'Difficulties make you stronger.',
            'author_bn': '‡¶ú‡ßÄ‡¶¨‡¶®‡ßá‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ',
            'author_en': 'Life Lesson',
            'category': 'strength'
        },
        {
            'text_bn': '‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶õ‡ßã‡¶ü ‡¶™‡ßç‡¶∞‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶Ü‡¶ó‡¶æ‡¶Æ‡ßÄ‡¶∞ ‡¶¨‡¶°‡¶º ‡¶∏‡¶æ‡¶´‡¶≤‡ßç‡¶Ø‡•§',
            'text_en': "Today's small effort is tomorrow's big success.",
            'author_bn': '‡¶∏‡¶´‡¶≤‡¶§‡¶æ‡¶∞ ‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞',
            'author_en': 'Success Mantra',
            'category': 'effort'
        },
        {
            'text_bn': '‡¶ú‡ßç‡¶û‡¶æ‡¶®‡¶á ‡¶∂‡¶ï‡ßç‡¶§‡¶ø, ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶á ‡¶Ü‡¶≤‡ßã‡•§',
            'text_en': 'Knowledge is power, education is light.',
            'author_bn': '‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï',
            'author_en': 'Educational',
            'category': 'education'
        },
        {
            'text_bn': '‡¶≠‡¶æ‡¶≤‡ßã ‡¶ï‡¶æ‡¶ú‡ßá ‡¶¶‡ßá‡¶∞‡¶ø ‡¶ï‡¶∞‡¶¨‡ßá‡¶® ‡¶®‡¶æ‡•§',
            'text_en': 'Do not delay in doing good work.',
            'author_bn': '‡¶®‡ßà‡¶§‡¶ø‡¶ï ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ',
            'author_en': 'Moral Teaching',
            'category': 'ethics'
        },
        {
            'text_bn': '‡¶è‡¶ï‡¶§‡¶æ‡¶á ‡¶¨‡¶≤, ‡¶∏‡¶Ç‡¶ò‡¶¨‡¶¶‡ßç‡¶ß‡¶§‡¶æ‡¶á ‡¶∂‡¶ï‡ßç‡¶§‡¶ø‡•§',
            'text_en': 'Unity is strength, togetherness is power.',
            'author_bn': '‡¶∏‡¶æ‡¶Æ‡¶æ‡¶ú‡¶ø‡¶ï ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ',
            'author_en': 'Social Teaching',
            'category': 'unity'
        },
        {
            'text_bn': '‡¶∏‡¶Æ‡¶Ø‡¶º‡¶á ‡¶Ö‡¶∞‡ßç‡¶•, ‡¶∏‡¶Æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶∏‡¶¶‡ßç‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§',
            'text_en': 'Time is money, use time wisely.',
            'author_bn': '‡¶∏‡¶Æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø',
            'author_en': 'Value of Time',
            'category': 'time'
        },
        {
            'text_bn': '‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏ ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®‡•§',
            'text_en': 'Believe in yourself.',
            'author_bn': '‡¶Ü‡¶§‡ßç‡¶Æ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏',
            'author_en': 'Self Confidence',
            'category': 'confidence'
        }
    ]
    
    try:
        with db.get_session() as session:
            # Check if quotes already exist
            existing_quotes = session.query(Quote).count()
            
            if existing_quotes == 0:
                for quote_data in quotes_data:
                    quote = Quote(
                        text_bn=quote_data['text_bn'],
                        text_en=quote_data['text_en'],
                        author_bn=quote_data['author_bn'],
                        author_en=quote_data['author_en'],
                        category=quote_data['category'],
                        is_active=True,
                        usage_count=0,
                        created_at=datetime.utcnow()
                    )
                    session.add(quote)
                
                session.commit()
                print(f"‚úÖ Added {len(quotes_data)} motivational quotes to database!")
            else:
                print(f"‚ÑπÔ∏è Database already contains {existing_quotes} quotes, skipping seed.")
                
    except Exception as e:
        print(f"‚ùå Error seeding quotes: {e}")

def main():
    """Main seeder function"""
    print("üå± Seeding database with sample data...")
    
    # Create tables
    db.create_tables()
    
    # Seed quotes
    seed_quotes()
    
    print("‚úÖ Database seeding completed!")

if __name__ == "__main__":
    main()